<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAWAAAALgAAADQAAAAyAAAAMQAAADEAAAAxAAAAMQAA
        ADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAyAAAANAAA
        AC0AAAAUAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgMHCHQEBwmeBAcJnwUICpwAAgWbAAACmwAB
        ApsAAAKbAAACmwAAApsAAAKbAAACmwAABJsAAQSbAAEEmwABBJsAAASbAAACmwAAApsAAAKbAAACmwAA
        AZcAAACLAAAAigAAAGgAAAAgAAAAAAAAAAAAAAAAAAAAAAQJCxQiOke4M11x+Thqgf44a4b9OXCL/FF2
        i/1ZdIT9VnKF/Vl2hv1Zdob9WXaG/Vl1hf1Xc4P9VXGB/VNvf/1Sbnz9VHCA/Vdzgv1ZdYX9W3eH/Vt3
        h/1deYn9Rmh5+RMzQ9wCBAajAAAAkAAAAEQAAAADAAAAAAAAAAAAAAAALllxrkyGov8rQlj/QXmn/zxu
        hf8pXXf/rbi9//Lu7f/r5fT/+/r5//z7+v/8+/v//fv7//n49//y8fD/6+no/+Ph4f/i4eD/6Ofm/+/t
        7f/08/L/+ff3///////5+vr/kqu5/xg0Rd4AAACPAAAASgAAAAQAAAAAAAAAAAMFBhFGgqHzRYqr/0B6
        rf9AhN7/UIXA/0Bba/9iYV7/ioWG/46MlP+dnZz/oKCg/6GgoP+fn57/nJyc/5iXl/+Tk5L/kJCQ/42N
        jf+Qj4//pKSk/7W1tP+3t7f/ubm5/+bm5f//////WHSB+gAAAJkAAABHAAAABAAAAAAAAAAABAgLGEGA
        ofNclLH/f5Wh/4Op2f9Ch9//ZZTZ/3GDmv9lZGX/gX56/4uLi/+SkpL/kpKS/5GRkf+SkpL/k5OT/5WV
        lf+ZmZn/nJyc/5+fn/+Li4v/uLi4//Dw8P/Y2Nj/qamp/+zr6v9of4r5AAAAmwAAAEcAAAAEAAAAAAAA
        AAAECAoXNXib8oy0yf////j/193n/67F6/9Kkt7/EaDw/zeWyf+yq6j/y8bE/9jZ2f/g4OD/3t7e/+Pj
        4//r6+v/8/Pz//r6+v/9/f3//v7+/+Xl5f+UlJT/zMzM///////d3d3/yMXE/2R6h/kAAACbAAAARwAA
        AAQAAAAAAAAAAAQIChc2eZvyiLLI///9+P/n4en/z9vw/0fY/f8At/v/AJ7u/zSQxP+up6P/xsLA/9TV
        1f/b29v/2dnZ/93d3f/l5eX/6+vr//Pz8//19fX//////9jY2P+sra3/+/v8/+fn5//At7b/YXWC+QAA
        AJsAAABHAAAABAAAAAAAAAAABAgKFzl6nfKJs8n////6//Do8v/R4Oz/j+39/yPT//8AuPv/AJ7u/zSQ
        xP+up6P/x8LA/9TV1v/b29z/2dna/9zd3f/k5OT/6+zs//Lz8//7/Pz/2tvb/6ioqP/4+Pj/5eXl/7y7
        uv9gdoP5AAAAmwAAAEcAAAAEAAAAAAAAAAAECAoXOnye8oqzyP/++fX/7Ofx//Dk6//Y5eb/len5/yPS
        /v8AuPv/AJ7u/zSQxP+up6L/yMK9/9XU0v/d29n/29jX/97b2v/l4uH/6+jo//j19P/Y1dX/pJ2c//Dl
        5P/g19b/trS0/11zgPkAAACbAAAARwAAAAQAAAAAAAAAAAQIChc8fZ/yi7HG//zw7P/r3+n/6+Do//bn
        4f/X4eL/luv7/yPS//8AuPv/AJ7v/zSOwP+vpJv/yb+4/9fRzf/g2NX/3tbT/9/W1f/k29r/8Obl/9PM
        y/+fn5//6urq/9zc2/+wrKv/W3B9+QAAAJsAAABHAAAABAAAAAAAAAAABAgKFz19n/KNtsv////8/+7t
        +P/v7vf/9vj3//jx8P/Z5+r/luv7/yPS/v8AuPv/AJ7v/zSQxf+vqab/yMTC/9XW1//c3d3/2dra/9zd
        3f/q6+v/z9DQ/5ydnf/h4uL/1NTU/7GpqP9abnr5AAAAmwAAAEcAAAAEAAAAAAAAAAAECAoXP36g8o63
        zP////r/7uz3/+/t9v/2+Pb/9Pb2//jx8P/Z6Ov/luz9/yPT//8AuPv/AJ7u/zSQxP+wqaX/ycXD/9bX
        1//c3d3/2dra/+Dh4f/HyMj/oJ+e/9/c3P/Mysr/sbCw/1tyfvkAAACbAAAARwAAAAQAAAAAAAAAAAQI
        ChdAgKLyj7XK//318P/s4+3/7eXt//Tw7f/07+3/9PDt//fs5//Z4+L/l+n4/yPS//8AuPv/AJ7u/zSQ
        xP+vpqH/yMC8/9XR0P/c1tb/3tjY/8G9vP+lnp7/593c/8zDw/+0s7P/XnWB+QAAAJsAAABHAAAABAAA
        AAAAAAAABAgKF0GDo/KPtsr//fPu/+vh6//s4+v/9O7r//Pu6//07+v/9O/r//jr5f/a5eX/l+v7/yPS
        //8AuPv/AJ7v/zOMv/+uop3/x725/9TNzf/h2dj/v7q6/6ipqf/r7O3/zc7O/7ixsP9gdYL5AAAAmwAA
        AEcAAAAEAAAAAAAAAAAECAoXQYOj8pG6z/////v/7+33/+/u9//2+Pf/9fb3//X29//19vf/9PX3//fw
        7//a5un/l+v7/yPS//8AuPv/AJ7v/zSRxf+uqKX/xsPB/9fZ2f++v7//q6ys//Lz8//T1NT/urW0/2J3
        hPkAAACbAAAARwAAAAQAAAAAAAAAAAQIChdDhaTyk7vQ////+//v7ff/7+73//b49//19vf/9fb3//X2
        9//19vf/9PX2//bv7//Y5ur/l+v8/yPT//8AuPv/AJ7u/zOPw/+tpqP/ysfF/7e5uf+no6L/8+zs/9nT
        0/+7u7r/YnmG+QAAAJsAAABHAAAABAAAAAAAAAAABAgKF0WHpvKTuMz//PDr/+vf6P/s4en/9O3o//Ps
        6f/07en/9e7p//Xv6f/17+n/9O7o//Xo4f/Y39v/mOn4/yPT//8AuPv/AJ7v/zOOwv+wo5//q6Ge/52Z
        mf/s5eX/2tTU/7u5uP9ieYb5AAAAmwAAAEcAAAAEAAAAAAAAAAAECAoXRoeo8pW7z//++PP/7ebw/+7n
        8P/18/D/9PHw//Tx7//08e//8/Hu//Pw7v/y8O3/8e/t//Lp5f/W4eP/mOv6/yPT//8AuPv/AJ7u/zaQ
        xP+Ui4f/kY6L/9/h4v/W19f/urGw/2N3g/kAAACbAAAARwAAAAQAAAAAAAAAAAQIChdGh6nyl7/S////
        +//v7ff/7+32//b39v/09fX/8/T0//Lz9P/y8vP/8fLy//Dx8v/w8fH/7/Dx//Dq6P/V4eT/mOv6/yPT
        //8AuPv/AKHy/ySAtP+AeXX/ysXD/8nJyf+2trX/Y3mG+QAAAJsAAABHAAAABAAAAAAAAAAABQgKF0iJ
        qvKYvtL//vj0/+3n8P/s5vD/9PHv//Lv7v/y7+7/8u/t//Hv7f/x7+z/8O7s//Dt6//v7ev/7uvq/+7l
        4v/T3N3/mOj3/yPT//8AuPv/AJ/w/yuFuP+qm5f/tqqn/6ysq/9hd4P5AAAAmwAAAEcAAAAEAAAAAAAA
        AAAFCAoXS4us8pm90P/87+r/6t7n/+rf5//x6ub/8Onm//Hq5v/x6+X/8evl//Hr5f/x6+T/8Ork/+/p
        4//u6OL/7OXh/+3e2f/S2Nj/mOr5/yPT//8AuPv/AKDw/zSRxf+blZH/npSR/1pvevoAAACdAAAASAAA
        AAQAAAAAAAAAAAUJChdMjKzym8LV///9+f/s6vT/6+n0//L08v/w8fL/7/Hx/+/w8P/u7/D/7e7v/+3t
        7v/s7e7/6+zt/+vs7f/q6+z/6err/+rk4//R297/mOn5/yPT//8AuPv/AKDx/x+Duf+HgX//UmNt+gAA
        AaMAAABLAAAABQAAAAAAAAAABQgKF02MrfKcwtX//vv3/+vp8//q6PL/8fPx/+/w8P/u7/D/7e7v/+3t
        7v/s7e7/6+zt/+vr7P/q6+z/6uvr/+nq6v/p6ur/5+np/+jj4f/P2t3/muz7/ybX//8Au///QJjC/3p1
        c/88TVb7AAAAqwAAAFMAAAAIAAAAAAAAAAAFCQsXT46v8p2/0f/66+b/59vk/+ba4//u5uL/7uXi/+7m
        4v/u5+L/7ujh/+/p4f/v6OH/7ufg/+3m4P/s5N//6uLe/+ng3v/o3t3/5tzc/+nY1v/Ex8n/eNLj/4nf
        9P/j2db/ko+O/0dNUf0AAAC2AAAAXgAAAA8AAAAAAAAAAAUJCxdQj7DynsLV//v07//o4+z/5+Ls/+7t
        6v/t6+r/7Orp/+zq6f/r6uj/6+ro/+rp5//q6Of/6efm/+jm5f/n5uX/5+Xk/+bk5P/m5OT/6ujo/8vG
        xf+JjIz/qJ2Z/+ro5//Y2dn/lZKO/0FFVOUAAABjAAAAFAAAAAAAAAAABQkLF1KSs/Wixdf///v1/+7p
        8v/t5/H/9PPw//Pw7//y8O7/8e/u//Hu7f/w7u3/8O3s/+/s6//v7Ov/7uvq/+7r6v/u6+r/7uvq/+7r
        6v/08e//0tDO/6Kfn/+ys7T/k5KS/+7o4//L0d//h6n7/y5DeqcAAAAOAAAAAAAAAAABAgIITYml5Z7K
        4P/d4uL/zdPe/8zS3f/Q2dz/ztfb/83W2v/M1dr/y9TZ/8rT2P/J09f/yNLX/8fR1v/G0Nb/xdDW/8XQ
        1f/Ez9X/w8/V/8jS2P+xwMj/W4ee/2meuP9WhJn/mKm2/9nv//+uzP//dZfw8gABBBAAAAAAAAAAAAAA
        AAAgNUBga6zN/2+z1f9tr8//bK/P/2uuz/9rrs//a67P/2uuz/9rrc//aq7P/2quz/9qrs//aq3P/2qt
        z/9qrc//aq7P/2muz/9prs//aa3P/2uw0v9xuNz/cbjc/3K73v9Xlbb6e5OtwbXN6etTZpKWAAABAQAA
        AAAAAAAAAAAAAAAAAAAQHCI5MFBggzRXaI4zVWaOM1VmjjNVZo4zVWaONFVmjjRVZo40VWaONFVmjjRV
        Zo40VWaONFVmjjRVZo40VWaONFVmjjRVZo40VWaONFVmjjRVZY41VmaOME9egQ0YHTQAAAAACAsPEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAAPgAAADwAAAAcAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAHAAAAB4AAAF/////8=
</value>
  </data>
</root>