<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>完整demo</title>
   <!--<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>-->
	<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE8"/>
    <script type="text/javascript" charset="utf-8" src="ueditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="ueditor.all.js"> </script>
    <!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
    <!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
    <script type="text/javascript" charset="utf-8" src="lang/zh-cn/zh-cn.js"></script>

    <style type="text/css">
        div{
            width:100%;
        }
    </style>
</head>
<body>
<div>
   
    <script id="editor" type="text/plain" style="width:1024px;height:500px;"></script>
</div>


    <script type="text/javascript">

        //实例化编辑器
        //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
        var ue = UE.getEditor('editor');




		function bold() {
           UE.getEditor('editor').execCommand( 'bold' );
        }


        function italic() {
            ue.execCommand('italic');
		}

		function subscript() {
		    ue.execCommand('subscript');
		}

		function superscript() {
		    ue.execCommand('superscript');
		}

		function touppercase() {
		    ue.execCommand('touppercase');
		}
		function tolowercase() {
		    ue.execCommand('tolowercase');
		}

		function underline() {
		    ue.execCommand('underline');
		}
		function strikethrough() {
		    ue.execCommand('strikethrough');
		}

		function fontborder() {
		    ue.execCommand('fontborder');
		}
		function horizontal() {
		    ue.execCommand('horizontal');
		}

		function indent() {
		    ue.execCommand('indent');
		}
		function insertparagraph() {
		    ue.execCommand('insertparagraph');
		}

		function justifyR() {
		    ue.execCommand('justify', 'right');
		}
		function justifyL() {
		    ue.execCommand('justify', 'left');
		}
		function justifyC() {
		    ue.execCommand('justify', 'center');
		}
		function justifyB() {
		    ue.execCommand('justify', 'justify');
		}
		function pagebreak() {
		    ue.execCommand('pagebreak');
		}

		function preview() {
		    ue.execCommand('preview');
		}
		function print() {
		    ue.execCommand('print');
		}

		function time() {
		    ue.execCommand('time');
		}
		function date() {
		    ue.execCommand('date');
		}

		function undo() {
		    ue.execCommand('undo');
		}
		function redo() {
		    ue.execCommand('redo');
		}

		function forecolor(color) {
			
		    ue.execCommand('forecolor',color);
		}

		function backcolor(color) {
			
		    ue.execCommand('backcolor',color);
		}

		function fontsize(size) {
			
		    ue.execCommand('fontsize',size);
		}

		function fontfamily(fontfamily) {
			
		    ue.execCommand('fontfamily',fontfamily);
		}

		function paragraph(type) {
			
		    ue.execCommand('Paragraph',type,"{class:'test'}");
		}

		function insertorderedlist(type) {
			
		    ue.execCommand('insertorderedlist',type);
		}

		function insertunorderedlist(type) {
			
		    ue.execCommand('insertunorderedlist',type);
		}
		
		function rowspacingtop(height) {
			
		    ue.execCommand('rowspacing',height,'top');
		}

		function rowspacingbottom(height) {
		
		    ue.execCommand('rowspacing',height,'bottom');
		}

		
		function lineheight(height) {
		
		    ue.execCommand('lineheight',height);
		}

		function horizontal() {
		
		    ue.execCommand('horizontal');
		}

		function print() {
		
		    ue.execCommand('print');
		}

		function preview() {
		
		    ue.execCommand('preview');
		}

		function inserttable(row,col) {
			var opt = {numRows:row,
			numCols:col
			};					
		    ue.execCommand('inserttable',opt);
		}

		function deletetable() {
		
		    ue.execCommand('deletetable');
		}

		function insertparagraphbeforetable() {
		
		    ue.execCommand('insertparagraphbeforetable');
		}
		
		function insertrow() {
		
		    ue.execCommand('insertrow');
		}

function cellalign() {
		
		    ue.execCommand('cellalign');
		}

function cellvalign() {
		
		    ue.execCommand('cellvalign');
		}

function insertcaption() {
		
		    ue.execCommand('insertcaption');
		}

function deletecaption() {
		
		    ue.execCommand('deletecaption');
		}

function inserttitle() {
		
		    ue.execCommand('inserttitle');
		}

function deletetitle() {
		
		    ue.execCommand('deletetitle');
		}

function inserttitlecol() {
		
		    ue.execCommand('inserttitlecol');
		}

function deletetitlecol() {
		
		    ue.execCommand('deletetitlecol');
		}

function mergeright() {
		
		    ue.execCommand('mergeright');
		}

function mergedown() {
		
		    ue.execCommand('mergedown');
		}

function mergecells() {
		
		    ue.execCommand('mergecells');
		}

function insertrownext() {
		
		    ue.execCommand('insertrownext');
		}
		
function deleterow() {
		
		    ue.execCommand('deleterow');
		}
		
function insertcol() {
		
		    ue.execCommand('insertcol');
		}

function insertcolnext() {
		
		    ue.execCommand('insertcolnext');
		}
function deletecol() {
		
		    ue.execCommand('deletecol');
		}

function splittocells() {
		
		    ue.execCommand('splittocells');
		}

function splittorows() {
		
		    ue.execCommand('splittorows');
		}
		function splittocols() {
		
		    ue.execCommand('splittocols');
		}

        function isFocus(e) {
            alert(UE.getEditor('editor').isFocus());
            UE.dom.domUtils.preventDefault(e)
        }
        function setblur(e) {
            UE.getEditor('editor').blur();
            UE.dom.domUtils.preventDefault(e)
        }
        function insertHtml() {
            var value = prompt('插入html代码', '');
            UE.getEditor('editor').execCommand('insertHtml', value)
        }
        function createEditor() {
            enableBtn();
            UE.getEditor('editor');
        }
        function getAllHtml() {
            return UE.getEditor('editor').getAllHtml();
        }
        function getContent() {
            return UE.getEditor('editor').getContent()
        }
        function getPlainTxt() {
            return UE.getEditor('editor').getPlainTxt()
        }
        function setContent(isAppendTo) {
            return UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo)
        }
        function setDisabled() {
            UE.getEditor('editor').setDisabled('fullscreen');
            disableBtn("enable");
        }

        function setEnabled() {
            UE.getEditor('editor').setEnabled();
            enableBtn();
        }

        function getText() {
            //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
            var range = UE.getEditor('editor').selection.getRange();
            range.select();
            var txt = UE.getEditor('editor').selection.getText();
            return txt;
        }

        function getContentTxt() {

            return UE.getEditor('editor').getContentTxt()
        }
        function hasContent() {

            return UE.getEditor('editor').hasContents()
        }
        function setFocus() {
            UE.getEditor('editor').focus();
        }
        function deleteEditor() {
            disableBtn();
            UE.getEditor('editor').destroy();
        }
        function disableBtn(str) {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++]; ) {
                if (btn.id == str) {
                    UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                } else {
                    btn.setAttribute("disabled", "true");
                }
            }
        }
        function enableBtn() {
            var div = document.getElementById('btns');
            var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
            for (var i = 0, btn; btn = btns[i++]; ) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            }
        }

        function getLocalData() {
            return UE.getEditor('editor').execCommand("getlocaldata");
        }

        function clearLocalData() {
            UE.getEditor('editor').execCommand("clearlocaldata");
            alert("已清空草稿箱")
        }
    </script>
</body>
</html>